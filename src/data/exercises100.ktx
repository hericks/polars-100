--- Basics
< q1
Import the polars package under the name `pl`. (★☆☆)

< h1
hint: import … as

< a1
import polars as pl


< q2
Print the polars version and configuration. (★☆☆)

< h2
hint: pl.show_versions, pl.Config().state

< a2
pl.show_versions()
pl.Config().state()


< q3
Create a series named "nums" with intergers ranging from 0 to 9. (★☆☆)

< h3
hint: pl.Series

< a3
nums = pl.Series("nums", range(10))
nums


< q4
Create a dataframe with columns "nums" and "bools" of integers and boolean values. (★☆☆)

< h4
hint: pl.DataFrame

< a4
df = pl.DataFrame({
    "nums": range(3),
    "bools": [True, True, False],
})
df


< q5
Find the (estimated) memory size of a series or DataFrame. (★☆☆)

< h5
hint: pl.Series.estimated_size, pl.DataFrame.estimated_size

< a5
nums = pl.Series(range(10))
nums.estimated_size()


< q6
Add a new column "value" with value 1.0 to the dataframe `df`. (★☆☆)

< d6
df = pl.DataFrame({
    "name": ["Tim", "Struppi", "Haddock"],
})

< h6
hint: pl.DataFrame.with_columns, pl.lit

< a6
df.with_columns(
    pl.lit(1.0).alias("value")
)


< q7
Add series `age` as new column to the dataframe `df`. (★☆☆)

< d7
df = pl.DataFrame({
    "name": ["Tim", "Struppi", "Haddock"],
})

age = pl.Series("age", [23, 4, 45])

< h7
hint: pl.DataFrame.with_columns, pl.lit

< a7
df.with_columns(age)


< q8
Peek at the first 15 rows of the dataframe `df`. (★☆☆)

< d8
import random

df = pl.DataFrame({
    "value": [random.normalvariate() for _ in range(250)]
})

< h8
hint: pl.DataFrame.head

< a8
df.head(15)